# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


trigger:
  branches:
    include:
    - '*' 

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
    - azure_playground
  always: true # run even if there were no changes to the mentioned branches

resources:
  containers:
  # Container with Maven 3.2.5, SSL to have the same environment everywhere.
  - container: flink-build-container
    image: rmetzger/flink-ci:5-ubuntu-amd64

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  CACHE_KEY: maven | $(Agent.OS) | **/pom.xml
  CACHE_FALLBACK_KEY: maven | $(Agent.OS)
  CACHE_FLINK_DIR: $(Pipeline.Workspace)/flink_cache

stages:
  # CI / PR triggered stage:
  - stage: ci_build_on_default_pool
    displayName: "Build on 'Default' pool (Flink Community Build Resources)"
    condition: not(eq(variables['Build.Reason'], 'Schedule'))
    jobs:
      - template: tools/azure-pipelines/azure-jobs.yml
        parameters:
          stage_name: ci_build_on_default_pool
          pool_definition:
            name: Default
          test_strategy:
            - template: tools/azure-pipelnes/ci-build-matrix.yml
  # CI / PR triggered stage:          
  - stage: ci_build_on_azure_os_free_pool
    displayName: "Build on free (for OS) Azure Resource Pool"
    dependsOn: [] # depending on an empty array makes the stages run in parallel
    condition: not(eq(variables['Build.Reason'], 'Schedule'))
    jobs:
      - template: tools/azure-pipelines/azure-jobs.yml
        parameters:
          stage_name: ci_build_on_azure_os_free_pool
          pool_definition:
            vmImage: 'ubuntu-latest'
          test_strategy:
            - template: tools/azure-pipelnes/ci-build-matrix.yml
  # Special stage for midnight build:
  - stage: cron_build_on_azure_os_free_pool
    displayName: "Cron build on free (for OS) Azure Resource Pool"
    dependsOn: [] # depending on an empty array makes the stages run in parallel
    condition: eq(variables['Build.Reason'], 'Schedule')
    jobs:
      - template: tools/azure-pipelines/azure-jobs.yml
        parameters:
          stage_name: cron_build_on_azure_os_free_pool
          pool_definition:
            vmImage: 'ubuntu-latest'
          test_strategy:
            strategy:
              matrix:
                core:
                  parameter: core
                python:
                  parameter: python
                libraries:
                  parameter: libraries
                blink_planner:
                  parameter: blink_planner
                connectors:
                  parameter: connectors
                kafka_gelly:
                  parameter: kafka/gelly
                tests:
                  parameter: tests
                scheduler_ng_core:
                  parameter: scheduler_ng_core
                scheduler_ng_tests:
                  parameter: scheduler_ng_tests
                misc:
                  parameter: misc


